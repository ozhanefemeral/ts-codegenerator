"use strict";var T=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var $=Object.getOwnPropertyNames;var R=Object.prototype.hasOwnProperty;var E=(e,t)=>{for(var n in t)T(e,n,{get:t[n],enumerable:!0})},G=(e,t,n,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of $(t))!R.call(e,o)&&o!==n&&T(e,o,{get:()=>t[o],enumerable:!(r=j(t,o))||r.enumerable});return e};var M=e=>G(T({},"__esModule",{value:!0}),e);var _={};E(_,{NextJS:()=>v,blockToTypeScript:()=>g,createFunctionCall:()=>h,createFunctionCallBlock:()=>k,createVariableWithFunctionCall:()=>V,extractReturnType:()=>u,extractVariables:()=>w,findVariableByType:()=>x,functionCallBlockToTypeScript:()=>d,generateCode:()=>P,generateServerAction:()=>b,getFunctionInfoFromNode:()=>S,getFunctionVariables:()=>p,getUniqueVariableName:()=>I,parseFunctionsFromText:()=>D,scanCodebase:()=>B,scanNextjsCodebase:()=>y});module.exports=M(_);var m=require("ts-morph");var C=require("ts-morph");function U(e){let t=[];return e.forEachDescendant(n=>{if(C.Node.isVariableDeclaration(n)){let r=n.getName(),o=n.getType().getText();t.push({name:r,type:o})}}),t}function p(e,t){let n=e.getFunction(t)||e.getFirstDescendant(r=>C.Node.isFunctionExpression(r)&&r.getName()===t);if(n)return U(n)}function S(e){if(m.Node.isFunctionDeclaration(e)){let t=e.getName()||"anonymous",n=e.getReturnType().getText(),r=e.getParameters().map(i=>({name:i.getName(),type:i.getType().getText()})),o=e.getJsDocs()[0]?.getDescription();return{name:t,returnType:n,parameters:r,jsDocComment:o,code:e.getText(),variables:p(e.getSourceFile(),t)}}return null}function D(e){let n=new m.Project().createSourceFile("temp.ts",e),r=[],o=[];return n.forEachDescendant(a=>{let i=S(a);i&&(r.push(i),i.returnType&&o.push(i.returnType),i.parameters?.forEach(F=>o.push(F.type)))}),{functionsInfo:r,usedTypes:o}}var f="Promise<";function x(e,t,n=!0,r=1/0){let o=e.filter((a,i)=>i<r);return n?o.reverse().find(a=>a.type===t):o.find(a=>a.type===t)}function I(e,t){let n=new Set(t.map(({name:a})=>a));if(!n.has(e))return e;let r=2,o=`${e}${r}`;for(;n.has(o);)r++,o=`${e}${r}`;return o}function u(e){return e?.startsWith(f)?e.slice(f.length,-1):e??"any"}function w(e){return e.map((t,n)=>({name:t.name.toLowerCase(),type:u(t.returnType),index:n}))}var l=require("typescript");function V(e,t){return l.factory.createVariableStatement(void 0,l.factory.createVariableDeclarationList([O(e.returnVariable?.name,e.functionInfo,t.variables,e.index)],l.NodeFlags.Const))}function h(e,t,n){let r=z(e,t,n),o=L(e,r);return e.returnType?.includes(f)?l.factory.createAwaitExpression(o):o}function z(e,t,n){return e.parameters?.map(r=>{let a=x(t,r.type,!0,n)?.name??r.name;return l.factory.createIdentifier(a)})??[]}function L(e,t){return l.factory.createCallExpression(l.factory.createIdentifier(e.name),void 0,t)}function O(e,t,n,r){return l.factory.createVariableDeclaration(l.factory.createIdentifier(e),void 0,void 0,h(t,n,r))}function k(e,t){let n=t.blocks.length,r=e.name.toLowerCase(),a={name:I(r,t.variables),type:u(e.returnType),index:n},i={functionInfo:e,parameters:e.parameters,returnVariable:a,isAsync:!!e.returnType?.includes(f),index:n,blockType:"functionCall"};return t.blocks.push(i),t.variables.push(a),i}function d(e,t){return V(e,t)}function g(e,t){switch(e.blockType){case"functionCall":return d(e,t);default:throw new Error(`Unknown block type: ${e.blockType}`)}}var c=require("typescript");function P(e){let t={blocks:e,variables:[],isAsync:e.some(i=>i.isAsync)},n=e.map(i=>g(i,t)),r="generatedFunction",o=t.isAsync,a=c.factory.createFunctionDeclaration(o?[c.factory.createModifier(c.SyntaxKind.AsyncKeyword)]:void 0,void 0,r,void 0,[],void 0,c.factory.createBlock(n));return(0,c.createPrinter)().printNode(c.EmitHint.Unspecified,a,(0,c.createSourceFile)("temp.ts","",c.ScriptTarget.Latest))}var s=require("ts-morph");function B(e){let t=new s.Project;t.addSourceFilesAtPaths(`${e}/**/*.ts`);let n={functions:[],types:[]},r=t.getSourceFiles().filter(o=>!o.isInNodeModules());for(let o of r)o.forEachDescendant(a=>{if(s.Node.isFunctionDeclaration(a)){let i=q(a);i&&n.functions.push(i)}else if(s.Node.isVariableDeclaration(a)&&s.Node.isArrowFunction(a.getInitializer())){let i=a.getInitializer();if(s.Node.isArrowFunction(i)){let F={name:a.getName(),parameters:i.getParameters().map(A=>({name:A.getName(),type:A.getType().getText()})),returnType:i.getReturnType().getText()};n.functions.push(F)}}else if(s.Node.isInterfaceDeclaration(a)||s.Node.isClassDeclaration(a)){let i=J(a);i&&n.types.push(i)}});return n}function q(e){return s.Node.isFunctionDeclaration(e)||s.Node.isMethodDeclaration(e)?{name:e.getName()||"anonymous",parameters:e.getParameters().map(t=>({name:t.getName(),type:t.getType().getText()})),returnType:e.getReturnType().getText()}:null}function J(e){if(s.Node.isInterfaceDeclaration(e)||s.Node.isClassDeclaration(e)){let t=e.getName()||"Anonymous",n=e.getProperties().map(o=>({name:o.getName(),type:o.getType().getText()})),r={name:t,properties:n};return s.Node.isClassDeclaration(e)&&(r.extends=e.getExtends()?.getText()?[e.getExtends().getText()]:void 0,r.implements=e.getImplements().map(o=>o.getText())),r}return null}var v={};E(v,{analyzeNextjsSourceFiles:()=>N,generateServerAction:()=>b,scanNextjsCodebase:()=>y});var W=require("ts-morph");function y(e){let t=new W.Project;return t.addSourceFilesAtPaths(`${e}/**/*.ts`),N(t.getSourceFiles())}function N(e){let t=[];return e.forEach(n=>{K(n)&&t.push(...X(n))}),{serverActions:t}}function K(e){return e.getFullText().trim().startsWith('"use server";')}function X(e){let t=[];return e.getFunctions().forEach(n=>{if(n.isAsync()){let r={name:n.getName()||"anonymous",returnType:n.getReturnType().getText(),parameters:n.getParameters().map(o=>({name:o.getName(),type:o.getType().getText()})),filePath:e.getFilePath()};t.push(r)}}),t}function b(e){let t=(e.parameters??[]).map(r=>`${r.name}: ${r.type}`).join(", "),n=e.returnType.replace(/Promise<(.*)>/,"$1");return n=`Promise<${n}>`,`"use server";

export async function ${e.name}(${t}): ${n} {
  // TODO: Implement server action logic
  throw new Error("Not implemented");
}`}0&&(module.exports={NextJS,blockToTypeScript,createFunctionCall,createFunctionCallBlock,createVariableWithFunctionCall,extractReturnType,extractVariables,findVariableByType,functionCallBlockToTypeScript,generateCode,generateServerAction,getFunctionInfoFromNode,getFunctionVariables,getUniqueVariableName,parseFunctionsFromText,scanCodebase,scanNextjsCodebase});
