name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"

      - name: Install Dependencies
        run: bun install

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Get latest version
          CURRENT_VERSION=$(node -p "require('./package.json').version")

          # Parse commits since last tag
          COMMITS=$(git log --format=%B $(git describe --tags --abbrev=0)..HEAD)

          # Determine version bump
          if echo "$COMMITS" | grep -q "^BREAKING CHANGE\|^[[:alpha:]]\+!:"; then
            # Major bump for breaking changes
            NEW_VERSION=$(semver -i major $CURRENT_VERSION)
          elif echo "$COMMITS" | grep -q "^feat:"; then
            # Minor bump for features
            NEW_VERSION=$(semver -i minor $CURRENT_VERSION)
          else
            # Patch bump for fixes
            NEW_VERSION=$(semver -i patch $CURRENT_VERSION)
          fi

          # Update version
          npm version $NEW_VERSION -m "chore(release): %s"

          # Push changes
          git push --follow-tags

          # Publish
          npm publish
